name: "CI - Lighthouse website audit Report"

on:
  pull_request_target:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lighthouse-report:
    name: Lighthouse website audit Report
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Wait for the Netlify Preview
        uses: andrewnicols/wait-for-netlify-preview@v1.0.6
        id: netlify
        with:
          site_id: "3c056055-e1bd-4cfd-8a02-ed35ab7aedfa"
          max_timeout: 900
          netlify_secret: ${{ secrets.NETLIFY_SECRET }}

      - name: Audit URLs using Lighthouse
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: |
            ${{ steps.netlify.outputs.deployUrl }}/
            ${{ steps.netlify.outputs.deployUrl }}/docs/apis/commonfiles
            ${{ steps.netlify.outputs.deployUrl }}/general/development/gettingstarted
            ${{ steps.netlify.outputs.deployUrl }}/general/releases
          configPath: ./.github/workflows/lighthouserc.json
          uploadArtifacts: true
          temporaryPublicStorage: true
        env:
          PR_NUMBER: ${{ github.event.pull_request.number}}

      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const results = ${{ steps.lighthouse_audit.outputs.manifest }}
            const links = ${{ steps.lighthouse_audit.outputs.links }}
            const createLighthouseReport = (await import(`${process.env.GITHUB_WORKSPACE}/scripts/format-lighthouse-score.mjs`)).default;
            const comment = createLighthouseReport({ results, links });
            core.setOutput("comment", comment);

      - name: Add Lighthouse stats as comment
        id: comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          header: lighthouse
          message: ${{ steps.format_lighthouse_score.outputs.comment }}
